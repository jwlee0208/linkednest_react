plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.3'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'net.linkednest'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.0.4'
	implementation 'org.springframework.boot:spring-boot-starter-webflux:3.0.4'
	implementation 'org.springframework.boot:spring-boot-starter-web:3.0.4'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.1'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	// https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	// https://mvnrepository.com/artifact/commons-io/commons-io
	implementation 'org.apache.commons:commons-io:1.3.2'
	// https://mvnrepository.com/artifact/org.apache.httpcomponents/httpcore
	implementation 'org.apache.httpcomponents:httpcore:4.4.15'
	// https://mvnrepository.com/artifact/org.codehaus.jettison/jettison
	implementation 'org.codehaus.jettison:jettison:1.5.4'
	implementation 'org.projectlombok:lombok:1.18.26'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'

	implementation 'org.springframework.boot:spring-boot-starter-security:3.0.4'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-oauth2-client
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:3.0.4'
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-jwt
	implementation 'org.springframework.security:spring-security-jwt:1.1.1.RELEASE'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'
	implementation 'commons-net:commons-net:3.9.0'
	implementation 'com.jcraft:jsch:0.1.55'
	// https://mvnrepository.com/artifact/com.google.apis/google-api-services-youtube
	implementation 'com.google.apis:google-api-services-youtube:v3-rev222-1.25.0'
	// https://mvnrepository.com/artifact/com.flickr4java/flickr4java
	implementation 'com.flickr4java:flickr4java:3.0.8'
	// https://mvnrepository.com/artifact/org.scribe/scribe
	implementation 'org.scribe:scribe:1.3.7'
	// https://mvnrepository.com/artifact/org.apache.tika/tika-core
	implementation 'org.apache.tika:tika-core:2.8.0'
	implementation 'net.ttddyy:spring-social-slideshare:1.0.1'

//	implementation 'org.glassfish:jakarta.el:4.0.2'

//	compileOnly 'javax.servlet:servlet-api:2.5'
	developmentOnly 'org.springframework.boot:spring-boot-devtools:3.0.4'
	runtimeOnly 'com.mysql:mysql-connector-j:8.0.32'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:3.1.2'
	annotationProcessor 'org.projectlombok:lombok:1.18.26'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:3.0.4'
	testImplementation 'io.projectreactor:reactor-test:3.5.4'
}

tasks.named('test') {
	useJUnitPlatform()
}

def frontendDir = "$projectDir/front"

sourceSets {
	main {
		resources {
			srcDirs = ["$projectDir/src/main/resources"]
		}
	}
}

processResources {
	dependsOn "copyReactBuildFiles"
}

task installReact(type: Exec) {
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "audit", "fix"
		commandLine 'npm.cmd', 'install'
	} else {
		commandLine "npm", "audit", "fix"
		commandLine 'npm', 'install'
	}
}

task buildReact(type: Exec) {
	dependsOn "installReact"
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "run-script", "build"
	} else {
		commandLine "npm", "run-script", "build"
	}
}

task copyReactBuildFiles(type: Copy) {
	dependsOn "buildReact"
	from "$frontendDir/build"
	into "$buildDir/resources/main/static"
}
