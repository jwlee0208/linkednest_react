name: Docker Image CI 

on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "master", "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout    
      uses: actions/checkout@v3

    - name: Set Up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'

    # gradle caching - 빌드 시간 향상
    - name: Gradle Caching
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    # - name: Setup Gradle
    #   uses: gradle/gradle-build-action@v2

    - name: Set Yaml
      uses: microsoft/variable-substitution@v1
      with:
        files: ./src/main/resources/application-dev.yml 
      env:
        spring.datasource:hikari.driver-class-name: org.mariadb.jdbc.Driver
        spring.datasource.hikari.jdbc-url: jdbc:mariadb://${{ secrets.DB_CONN_URL }}:${{ secrets.DB_PORT }}/${{ DB_NAME }}?useSSL=false 
        spring.datasource.hikari.username: ${{ secrets.DB_USERNAME }} 
        spring.datasource.hikari.password: ${{ secrets.DB_PASSWD }} 
    # gradle build
    - name: Build with Gradle
      run: |
        chmod +x gradlew
        ./gradlew build --exclude-task test
      shell: bash  

    # - name: Docker meta
    #   id: docker_meta
    #   uses: crazy-max/ghaction-docker-meta@v1
    #   with:
    #     images: jwlee0208/linkednest_test
    #     tag-semver: |
    #       {{version}}
    #       {{major}}.{{minor}}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64      
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGE }}:github.v${{ github.run_number }}  #${{ steps.docker_meta.outputs.tags }} 
        labels: ${{ steps.docker_meta.outputs.labels }}
    # - name: Build the Docker image
    #   run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
